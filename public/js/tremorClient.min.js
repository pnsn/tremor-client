function TremorMap(config){var map,coloringName,eventMarkers,heatmap,overlays,colorKey,topoBaseMap,baseLayers,scaleMarkers,rectangle,drawnRectangle,customMarker,dateStart,dateEnd,shapeOptions=config.boundsOptions,colors=config.coloringOptions.colors,rainbow=new Rainbow,editableLayers=new L.FeatureGroup;function startDrawing(){var dfd=$.Deferred();return editableLayers.clearLayers(),(rectangle=new L.Draw.Rectangle(map,{shapeOptions:shapeOptions})).enable(),map.on(L.Draw.Event.CREATED,(function(e){var type=e.layerType,layer=e.layer;editableLayers.addLayer(layer),dfd.resolve(getBounds())})),map.on("draw:drawstop",(function(e){dfd.reject("cancel")})),dfd.promise()}function removeBounds(){editableLayers.clearLayers(),rectangle&&(rectangle.disable(),rectangle=null),drawnRectangle&&(drawnRectangle=null)}function addBounds(bounds){editableLayers.clearLayers(),drawnRectangle=L.rectangle([[bounds.lat_max,bounds.lon_max],[bounds.lat_min,bounds.lon_min]],shapeOptions),editableLayers.addLayer(drawnRectangle)}function getBounds(){if(editableLayers.getLayers().length>0){var layer,bounds=editableLayers.getLayers()[0].getBounds();return{lat_max:bounds.getNorth(),lat_min:bounds.getSouth(),lon_max:bounds.getEast(),lon_min:bounds.getWest()}}}function clearLayers(){toggleLayer(!1,heatmap),toggleLayer(!1,eventMarkers)}function drawHeatMap(){clearLayers();var points=[];eventMarkers.eachLayer((function(marker){points.push(marker.getLatLng())})),heatmap=L.heatLayer(points,{radius:15,blur:20}),map.addLayer(heatmap)}function toggleLayer(show,layer){show?map.hasLayer(layer)||map.addLayer(layer):map.hasLayer(layer)&&map.removeLayer(layer)}function recolorMarkers(alreadyColored){clearLayers(),eventMarkers&&("heat-map"==coloringName?(drawHeatMap(),null!=colorKey._map&&map.removeControl(colorKey),null!=magKey._map&&map.removeControl(magKey)):(alreadyColored||(prepareSpectrum(),eventMarkers.eachLayer((function(marker){marker.setSizing(scaleMarkers),marker.setColoring()}))),toggleLayer(!0,eventMarkers)))}function prepareSpectrum(){!colors[coloringName]||"time"!=colors[coloringName].type&&"magnitude"!=colors[coloringName].type?null!=colorKey._map&&map.removeControl(colorKey):(rainbow.setSpectrumByArray(colors[coloringName].fill),null==colorKey._map&&map.addControl(colorKey),colorKey.recolor())}function getMagIndex(mag){return mag?mag<.5?0:mag>2.2?100:100*(mag-.5)/(2.2-.5):-1}function updateMarkers(data){clearLayers();var firstEventTime=new Date(data.features[0].properties.time),lastEventTime=new Date(data.features[data.features.length-1].properties.time);prepareSpectrum(),eventMarkers=L.geoJSON(data.features,{pointToLayer:function(feature,latlng){var id=feature.properties.id,time=new Date(feature.properties.time),lat=latlng.lat,lng=latlng.lng,mag=feature.properties.magnitude?feature.properties.magnitude:null,timeIndex=(time-firstEventTime)/(lastEventTime-firstEventTime)*100,magIndex=getMagIndex(mag),magString="<div>Magnitude (energy): "+(mag?mag.toFixed(1):"no data")+"</div>",timeString=time.toISOString().replace("T"," ").replace(".000Z",""),marker=new customMarker([lat,lng],{timeIndex:timeIndex,id:id,magIndex:magIndex});if(marker.setSizing(scaleMarkers),marker.setColoring(),marker.bindPopup("<div> Time: "+timeString+"</div> <div> Latitude: "+lat+"</div><div>Longitude: "+lng+"</div>"+magString).on("mouseover",(function(){$(".active-event").removeClass("active-event"),$(".event-"+id).addClass("active-event")})),data.features.length<5e3){var listItem=$("<li class='tremor-event-nav event-"+id+"'><div>"+timeString+"</div><div>"+(mag?"M"+mag:"no data")+"</div></li>");listItem.click((function(){$(this).addClass("active-event"),marker.openPopup()})).on("mouseenter",(function(){$(this).addClass("active-event"),marker.setRadius(6)})).on("mouseout",(function(){$(this).removeClass("active-event"),marker.setSizing(scaleMarkers)})),$("#event-list").prepend(listItem),marker.on("click",(function(){$(".active-event").removeClass("active-event"),listItem.addClass("active-event"),$("#event-list").scrollTop(listItem[0].scrollHeight-50)}))}return marker}}),recolorMarkers(!0)}function setColoring(color){coloringName=colors[color]||"heat-map"==color?color:"red"}function setSizing(show){show?(scaleMarkers=!0,map.addControl(magKey)):(scaleMarkers=!1,map.removeControl(magKey))}return map=new L.Map(config.mapContainer,config.leafletOptions).setView(config.center,config.zoom),baseLayers={Topographic:topoBaseMap=L.esri.basemapLayer("Topographic"),Gray:L.esri.basemapLayer("Gray"),Streets:L.esri.basemapLayer("Streets"),Imagery:L.esri.basemapLayer("Imagery")},L.Control.Color=L.Control.extend({onAdd:function(map){var div=L.DomUtil.create("div","map-key map-control color-key");return div.innerHTML="<div class='key-title'>Color Scale</div><div id='key-top' class='key-top'></div><div id='key-colored'></div><div id='key-bottom'></div><div class='no-data'><span> No Data: </span><div></div></div>",div},recolor:function(){colors[coloringName]&&"magnitude"==colors[coloringName].type?($("#key-top").text("Me = 2.2"),$("#key-bottom").text("0.5"),$("#key-no-data").show()):($("#key-top").text(dateEnd),$("#key-bottom").text(dateStart),$("#key-no-data").hide());var str="";$.each(colors[coloringName].fill,(function(i,color){str+=","+color})),$("#key-colored").css("background-image","linear-gradient(to top"+str+")")}}),L.Control.Magnitude=L.Control.extend({onAdd:function(map){var div=L.DomUtil.create("div","map-key map-control mag-key");return div.innerHTML="<div id='sizes'><div class='key-title'>Magnitude (Me)</div><div class='mag-text'>0.5</div><div id='circles'><div></div><div></div><div></div><div></div><div></div></div><div class='mag-text'>2.2</div><div class='no-data'><span> No Data: </span><div></div>",div}}),magKey=new L.Control.Magnitude({position:"topleft"}),colorKey=new L.Control.Color({position:"topleft"}),rainbow=new Rainbow,customMarker=L.CircleMarker.extend({options:{weight:config.markerOptions.weight,opacity:config.markerOptions.opacity,fillOpacity:config.markerOptions.fillOpacity,radius:config.markerOptions.size/2,magIndex:-1,timeIndex:0,id:"",fill:"white",outline:"black"},setColoring:function(){var fill;if(colors[coloringName]){switch(colors[coloringName].type){case"magnitude":fill=this.options.magIndex>=0?"#"+rainbow.colorAt(this.options.magIndex):"#ababab";break;case"time":fill="#"+rainbow.colorAt(this.options.timeIndex);break;default:fill=colors[coloringName].fill}this.setStyle({fillColor:fill,color:colors[coloringName].outline})}},setSizing:function(sizing){var size;sizing&&this.options.magIndex>=0?size=this.options.magIndex/100*config.markerOptions.size+1:sizing&&(size=config.markerOptions.size/2),this.setStyle({radius:size?size/2:config.markerOptions.size/2})}}),overlays={Seismometers:L.geoJSON(seismometersGeoJSON,{pointToLayer:function(feature,latlng){return L.marker(latlng,{icon:L.icon({iconUrl:"/assets/map/station.png",iconSize:[10,8]})}).bindPopup("<div>"+feature.properties.station+"</div>")}}),"Past Tremor":L.geoJSON(pastTremorGeoJSON,{style:pastTremorGeoJSON.properties.style}),"JDF Plate Contours":L.geoJSON(contoursGeoJSON,{style:function(feature){return feature.properties.style}})},map.addLayer(topoBaseMap),L.control.scale().addTo(map),map.addLayer(editableLayers),L.control.layers(baseLayers,overlays).addTo(map),L.Control.include({_refocusOnMap:L.Util.falseFn}),{recolorMarkers:recolorMarkers,updateMarkers:updateMarkers,addBounds:addBounds,startDrawing:startDrawing,removeBounds:removeBounds,getBounds:getBounds,clearLayers:clearLayers,setColoring:setColoring,setSizing:setSizing,setRange:function(start,end){dateStart=start,dateEnd=end}}}